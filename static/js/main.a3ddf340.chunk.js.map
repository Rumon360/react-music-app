{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","onChange","e","target","value","min","max","duration","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","librarySong","songSelectHandler","Library","libraryStatus","LibrarySong","Nav","setLibraryStatus","faMusic","chillHop","uuidv4","audio","App","useRef","useState","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3ddf340.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  // Event Handlers\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1]);\r\n        if (isPlaying) {\r\n          audioRef.current.play();\r\n        }\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n  // Add the styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            onChange={dragHandler}\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          className=\"skip-forward \"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img src={currentSong.cover} alt={currentSong.name} />\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\n\r\nconst librarySong = ({\r\n  song,\r\n  setCurrentSong,\r\n  id,\r\n  audioRef,\r\n  isPlaying,\r\n  songs,\r\n  setSongs,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    await setCurrentSong(song);\r\n    // Add active state\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    // Check if the song is playing\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img src={song.cover} alt={song.name} />\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default librarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            song={song}\r\n            setCurrentSong={setCurrentSong}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\nimport librarySong from \"./LibrarySong\";\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Bliss\",\r\n      artist: \"Misha, Jussi Halme\",\r\n      cover: \"https://cutt.ly/YmdxqNH\",\r\n      id: uuidv4(),\r\n      active: true,\r\n      color: [\"#E97274\", \"#AA9AAD\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9248\",\r\n    },\r\n    {\r\n      name: \"Lullaby\",\r\n      artist: \"Misha, Jussi Halme\",\r\n      cover: \"https://cutt.ly/YmdxqNH\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#E97274\", \"#AA9AAD\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=15033\",\r\n    },\r\n    {\r\n      name: \"travelbag\",\r\n      artist: \"mommy, Sleepy Fish\",\r\n      cover: \"https://cutt.ly/smdcbZU\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#5F94D6\", \"#E8D8D1\"],\r\n      audio: \"https://cutt.ly/YmdcFLE\",\r\n    },\r\n    {\r\n      name: \"Simplexity\",\r\n      artist: \"Evil Needle\",\r\n      cover: \"https://cutt.ly/SmdcXS7\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#ED7052\", \"#E6B04E\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=14958\",\r\n    },\r\n    {\r\n      name: \"On The Moon\",\r\n      artist: \"SwuM\",\r\n      cover: \"https://cutt.ly/jmdc7E1\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#243233\", \"#4F3E25\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=15237\",\r\n    },\r\n    {\r\n      name: \"Lost Soul\",\r\n      artist: \"C Y G N\",\r\n      cover: \"https://cutt.ly/1mhQYqi\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#4F2D52\", \"#7B94BA\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=14989\",\r\n    },\r\n    {\r\n      name: \"Splendour\",\r\n      artist: \"Aarigod\",\r\n      cover: \"https://cutt.ly/EmhQJK0\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#182210\", \"#8AB153\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=13013\",\r\n    },\r\n    {\r\n      name: \"Beyond Clouds\",\r\n      artist: \"Saib\",\r\n      cover: \"https://cutt.ly/omhEslw\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#FBBF7B\", \"#1C1816\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9297\",\r\n    },\r\n    {\r\n      name: \"Murmuration\",\r\n      artist: \"Blue Wednesday, Shopan\",\r\n      cover: \"https://cutt.ly/GmhEvoG\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#3F426B\", \"#653F62\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=7814\",\r\n    },\r\n    {\r\n      name: \"Small Town Palm Trees\",\r\n      artist: \"Mama Aiuto\",\r\n      cover: \"https://cutt.ly/SmhERE5\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#15272B\", \"#541F1B\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=12124\",\r\n    },\r\n    {\r\n      name: \"Melancholy\",\r\n      artist: \"Makzo\",\r\n      cover: \"https://cutt.ly/HmhEH7q\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#3F5896\", \"#F49971\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=11778\",\r\n    },\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React, { useState, useRef } from \"react\";\nimport \"./styles/app.scss\";\n// Adding Components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n// Import Util\nimport chillHop from \"./data\";\nimport librarySong from \"./components/LibrarySong\";\nfunction App() {\n  // Ref\n  const audioRef = useRef(null);\n  // State\n  const [songs, setSongs] = useState(chillHop());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    // Calculate Percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration: duration,\n      animationPercentage: animation,\n    });\n  };\n  // Event handler\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        audioRef={audioRef}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}